'use server';

import { getServerSideSitemapIndex } from 'next-sitemap';
import dbConnect from '@/lib/mongodb';
import { Product } from '@/models/Product';

export async function GET() {
  try {
    await dbConnect();
    
    // Count total active products to determine how many sitemaps we need
    const totalProducts = await Product.countDocuments({ status: 'active' });
    const PRODUCTS_PER_SITEMAP = 1000;
    const productSitemapCount = Math.ceil(totalProducts / PRODUCTS_PER_SITEMAP);
    
    // Base URL from environment or default
    const siteUrl = process.env.SITE_URL || 'https://knitkart.in';
    
    // Create an array of sitemap URLs
    const sitemaps = [
      // Static sitemap generated by next-sitemap
      `${siteUrl}/sitemap.xml`,
    ];
    
    // Add product sitemaps
    // These URLs will be rewritten to /sitemap/:id via the rewrites in next.config.js
    for (let i = 0; i < productSitemapCount; i++) {
      sitemaps.push(`${siteUrl}/product-sitemap-${i}.xml`);
    }
    
    // Add category sitemaps if needed
    // sitemaps.push(`${siteUrl}/category-sitemap.xml`);
    
    return getServerSideSitemapIndex(sitemaps);
  } catch (error) {
    console.error('Error generating sitemap index:', error);
    return new Response('Error generating sitemap', { status: 500 });
  }
}
